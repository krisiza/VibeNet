@using Microsoft.AspNetCore.Mvc.TagHelpers
@using VibeNet.Core.Utilities
@using VibeNet.Core.ViewModels
@using VibeNetInfrastucture.Data.Models.Enums

@model VibeNetUserRegisterViewModel
@{
    ViewData["Title"] = "Register";
}

<link rel="stylesheet" href="~/css/IdentityStyleSheet.css" asp-append-version="true" />

<div class="row register-container justify-content-center">
    <div class="flex-lg-shrink-0">
        <h1>Enter your data</h1>
        <form style="width:55%; justify-self:center;" id="registerForm" class="form-container" enctype="multipart/form-data" asp-route-returnUrl="/Home/Index" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div style="visibility:hidden" class="form-floating mb-3">
                <input asp-for="@Model.CreatedOn" class="form-control" value="@DateTime.Now.ToString()" aria-required="true" />
            </div>
            <div class="form-floating mb-3">
                <input asp-for="@Model.FirstName" class="form-control" aria-required="true"/>
                <label asp-for="@Model.FirstName">FirstName</label>
                <span asp-validation-for="@Model.FirstName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="@Model.LastName" class="form-control" aria-required="true"/>
                <label asp-for="@Model.LastName">LastName</label>
                <span asp-validation-for="@Model.LastName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="@Model.Birthday" id="startDate" value="@DateTime.Now.ToString()" class="form-control" type="date"/>
                <label asp-for="@Model.Birthday">Birthday</label>
                <span asp-validation-for="@Model.Birthday" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <select asp-for="@Model.Gender" class="form-control">
                    @foreach (var gen in Enum.GetValues(typeof(Gender)).Cast<Gender>())
                    {
                        <option value="@gen.GetDisplayName()">@gen.GetDisplayName()</option>
                    }
                </select>
                <label asp-for="@Model.Gender">Gender</label>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="@Model.HomeTown" class="form-control" aria-required="true"/>
                <label asp-for="@Model.HomeTown">HomeTown</label>
                <span asp-validation-for="@Model.HomeTown" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="@Model.ProfilePictureFile" class="form-control-lg" id="formFileLg" type="file" />
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
</div>

<script>
    function displaySelectedImage(event, elementId) {
        const selectedImage = document.getElementById(elementId);
        const fileInput = event.target;

        if (fileInput.files && fileInput.files[0]) {
            const reader = new FileReader();

            reader.onload = function (e) {
                selectedImage.src = e.target.result;
            };

            reader.readAsDataURL(fileInput.files[0]);
        }
    }
</script>
